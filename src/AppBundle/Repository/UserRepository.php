<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;
use Doctrine\Common\Persistence\ObjectManager;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\JsonResponse;
use Doctrine\ORM\Query;
use Doctrine\ORM\EntityRepository;


/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    // Ce que j'ai fait (OK aussi mais un mieux avec LIKE
//    public function findByFirstNameOrLastName(string $name)
//    {
//        $qb = $this->createQueryBuilder('u');
//
//        return $qb  ->where($qb->expr()->eq('u.firstName', ':name'))
//                    ->orWhere($qb->expr()->eq('u.lastName', ':name'))
//                    ->setParameter('name', $name)
//                    ->getQuery()
//                    ->getResult();
//    }


// Ce qu'a fait LUCAS :
    /**
     * @param $query
     * @return \Doctrine\ORM\Query
     */
    public function findByFirstNameOrLastName($query)
    {
        /** RequÃªte SQL
         * SELECT *
         * FROM User u
         * WHERE u.lastname LIKE %query% OR u.firstname LIKE %query%
         * DISTINCT
         */

        $qb = $this->createQueryBuilder('u');                   // Comment on sait que u = User ?????
        $qb
            ->where($qb->expr()->like('u.firstName', ':query'))
            ->orWhere($qb->expr()->like('u.lastName', ':query'))
            ->setParameter('query', '%'.$query.'%')             // Ajout des '%' obligatoire
            ->distinct()
        ;

        return $qb->getQuery();
    }
}